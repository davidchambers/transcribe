#!/usr/bin/env bash
set -euf -o pipefail

node_modules/.bin/c8 \
  --check-coverage \
  --100 \
  --reporter text \
  --include src/core.js \
  node_modules/.bin/oletus -- test/index.js

trap 'rm -f test/actual.md test/expected.md' EXIT

cat >test/actual.md <<-'EOF'
	Before.

	<!--transcribe-->

	Between.

	<!--/transcribe-->

	After.
EOF

cat >test/expected.md <<-'EOF'
	Before.

	<!--transcribe-->

	### <a name="map" href="https://github.com/owner/name/blob/v1.2.3/examples/fp.js#L1">`map :: (a -⁠> b) -⁠> Array a -⁠> Array b`</a>

	Transforms a list of elements of type `a` into a list of elements
	of type `b` using the provided function of type `a -> b`.

	```javascript
	> map (String) ([1, 2, 3, 4, 5])
	['1', '2', '3', '4', '5']
	```

	### <a name="filter" href="https://github.com/owner/name/blob/v1.2.3/examples/fp.js#L18">`filter :: (a -⁠> Boolean) -⁠> Array a -⁠> Array a`</a>

	Returns the list of elements that satisfy the provided predicate.

	```javascript
	> filter (n => n % 2 === 0) ([1, 2, 3, 4, 5])
	[2, 4]
	```

	<!--/transcribe-->

	After.
EOF

bin/transcribe.js \
  --url 'https://github.com/owner/name/blob/v1.2.3/{filename}#L{line}' \
  --insert-into test/actual.md \
  -- examples/fp.js

diff --color -u test/actual.md test/expected.md
